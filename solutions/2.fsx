/// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
/// By starting with 1 and 2, the first 10 terms will be:
///
///     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
///
/// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
/// find the sum of the even-valued terms.

let even = Seq.filter (fun n -> n % 2 = 0)
let lessThan4Million = Seq.takeWhile (fun n -> n < 4000000)
let printAnswer = printfn "The sum of all the even Fibonacci numbers below 4 million is %d"
let sumSeq = Seq.reduce (+)

// Blatant copy of http://stackoverflow.com/a/2846139/1370576.
let fibSeq = Seq.unfold (fun (prevPrev, prev) -> Some (prevPrev + prev, (prev, prevPrev + prev))) (0, 1)

printAnswer (fibSeq |> even |> lessThan4Million |> sumSeq)
